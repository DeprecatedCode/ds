# Simple HTTP server in DefaultScript
# @author Nate Ferrero
# @author http://ericsowell.com/blog/2011/5/6/serving-static-files-from-node-js

http: 'http'  @require
fs:   'fs'    @require
path: 'path'  @require

PORT: 9999

methodNotAllowed: {
  '> HTTP 405 Method Not Allowed' @log
  405 response.writeHead,
  nil response.end
}

serverError: {
  '> HTTP 500 Server Error' @log
  500 response.writeHead,
  nil response.end
}

notFound: {
  '> HTTP 404 Not Found' @log
  404 response.writeHead,
  @args ['Not Found', 'utf-8'] response.end
}

redirect: {
  '> HTTP 302 Redirect ' @it @log
  @args [302, @ {Location: @it}] response.writeHead
  nil response.end
}

ok: {
  '> HTTP 200 OK (' content.length ' bytes)' @log
  @args [200, @ {'Content-Type': contentType}] response.writeHead
  @args [content, 'utf-8']                     response.end
}

serveFile: {
  filePath: request.url

  & (
    (filePath.length - 1) filePath = '/' {
      ? {:filePath 'index.html'}
    }
  )

  'read ' filePath @log

  &{filePath: '.' filePath}

  extname: filePath path.extname
  contentType: extname {
    '.ds'   ? 'text/defaultscript'
    '.js'   ? 'text/javascript'
    '.css'  ? 'text/css'
    @default  'text/html'
  }

  fs.exists @with [filePath, {
    @it {
      ? fs.readFile @with [filePath, @named ['error', 'content'] {
        error @exists {
          ? & serverError
         !? & ok
        }
      }]

      !? & notFound
    }
  }]
}

PORT (
  http.createServer @with (
    @named ['request', 'response'] {
      'request ' request.method ' ' request.url @log

      request.method = 'GET' {
        ? (
          filePath: request.url

          & (
            '.' request.url.indexOf != -1 || \
            ((request.url.length - 1) request.url = '/') {
              ? & serveFile
              !? request.url '/' redirect
            }
          )
        )

        !? & methodNotAllowed
      }
    }
  )
).listen

'Server running at http://127.0.0.1:' PORT '/' @log
